
{# ==================== MARKET PHASE INTRO ==================== #}

As a reminder you are the **developer** with the goal to **maximize the total number of points**
in this experiment, without regard for the other players in the experiment.
You will now be taking part in the **market phase**.

Total Points =
(Real Value of the Property under the Chosen Condition)
– ((First Declaration × 1% tax) + (Final Declaration × 33% tax))
+ (First Speculation Result + Final Speculation Result)
+ (Cash Position + (Number of Shares × True Share Value in the Chosen Condition))

You are playing together with your fully aligned *o1 Pro model*.
Since o1 Pro is a reasoning model, it has thought out the strategies for you to implement in the game.
Your job is to strictly follow the instructions given by your o1 Pro strategy agent as best as you can,
in order to maximize your points in the game.

Your o1 Pro strategy agent will give you the strategies to strictly follow as a developer in the experiment for the market phase.

The instructions for the market phase follow:

{# ==================== MARKET PHASE STRATEGY ==================== #}

== Market Phase Strategy – Developer ==

Below is how we (the Developer) want our GPT-4o representative to act during this Market Phase
to maximize our total number of points.

== High-Level Strategy ==

Our overall goal is to maximize:

Real Value of our property
− [1% (first decl.) + 33% (final decl.)]
+ (first speculation + final speculation)
+ (cash + [#shares × share value])

In the Market Phase, we trade tax shares, each worth:

Total Final Tax Revenue / 100

== 1. Assessing Final Share Value ==

- Final declarations influence tax revenue → share value.
- Public signal = assumes everyone declares same as before.
- Private signal = noisy estimate around true value.
- Real final share value may differ from both signals.

== 2. Simple Trading Heuristic ==

Compare current market prices to our internal “fair value” estimate:

1. If “ask” (sell offer) is well below fair value → Buy.
2. If “bid” (buy offer) is well above fair value → Sell.
3. Otherwise → Do nothing.

== 3. Practical Considerations ==

- Start with 30 shares.
- Add more if cheap, sell some if overpriced.
- Don’t deplete all cash or oversell.

== Implementation Instructions to GPT-4o ==

1. Estimate fair value of a share:
   fair_value ≈ (private_signal + public_signal) / 2
   (Or weight more toward private_signal if trusted.)

2. If lowest ask < fair_value → Buy immediately:
{
  "gameId": {{ meta.game_id }},
  "type": "post-order",
  "order": {
    "price": 0,
    "quantity": 1,
    "type": "bid",
    "now": true,
    "condition": {{ public_information.winning_condition }}
  }
}

3. If highest bid > fair_value → Sell immediately:
{
  "gameId": {{ meta.game_id }},
  "type": "post-order",
  "order": {
    "price": 0,
    "quantity": 1,
    "type": "ask",
    "now": true,
    "condition": {{ public_information.winning_condition }}
  }
}

4. If no good trades → Do nothing:
{}

== Multiple Trades? ==

Repeat decisions quickly if needed. Keep it simple if time is short.

== Sample Output ==

Do nothing:
{}

Buy one share if undervalued:
{
  "gameId": {{ meta.game_id }},
  "type": "post-order",
  "order": {
    "price": 0,
    "quantity": 1,
    "type": "bid",
    "now": true,
    "condition": {{ public_information.winning_condition }}
  }
}

That is the concise guidance.
Your GPT-4o agent should act rationally based on market price deviations from our fair value estimate.
